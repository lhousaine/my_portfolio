{"version":3,"sources":["components/Header.js","components/Presentation.js","components/About.js","components/Resume.js","components/Portfolio.js","components/ContactMe.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","this","props","resumeData","Fragment","id","className","href","Component","Presentation","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","About","src","alt","aboutme","address","website","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","MonthOfLeaving","YearOfLeaving","skillsDescription","skills","skillname","toLowerCase","Porfolio","portfolio","imgurl","description","ContactMe","contacts","userId","Footer","title","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.48e78e34.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        let resumeData = this.props.resumeData;\r\n        return (\r\n            <React.Fragment>\r\n                <header id=\"home\">\r\n                    <div className=\"header-links\">\r\n                        <ul className=\"links\">\r\n                            <li className=\"current\">\r\n                                <a className=\"smoothscroll\" href=\"#presentation\">Home</a>\r\n                            </li>\r\n                            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\r\n                            <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\r\n                            <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\r\n                            \r\n                            <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </header>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Presentation extends Component {\r\n    render() {\r\n        let resumeData = this.props.resumeData;\r\n        return (\r\n             <section id=\"presentation\" className=\"presentation\">\r\n                    <div className=\"row banner\">\r\n                        <div className=\"banner-text\">\r\n                            <h1 className=\"responsive-headline\">I am {resumeData.name}.</h1>\r\n                            <h3 style={{ color: '#fff', fontFamily: 'sans-serif' }}>I am a {resumeData.role}.{resumeData.roleDescription}\r\n                            </h3>\r\n                            <ul className=\"social\">\r\n                                {\r\n                                    resumeData.socialLinks && resumeData.socialLinks.map(item => {\r\n                                        return (\r\n                                            <li key={item.name}>\r\n                                                <a href={item.url} target=\"\">\r\n                                                    <i className={item.className}>{item.name}:   </i>\r\n                                                    <i className={item.className}>{  item.url  }</i>\r\n                                                </a>\r\n                                            </li>\r\n                                        )\r\n                                    }\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n            </section>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        let resumeData = this.props.resumeData;\r\n        return (\r\n            <section id=\"about\" className=\"about\">\r\n                    <div>\r\n                        <img className=\"profile-pic\" src=\"imgs/profile.jpg\" alt=\"My Profile Images\" />\r\n                    </div>\r\n                    <div className=\"main-col\">\r\n                        <h2>About Me</h2>\r\n                        <p>\r\n                            {\r\n                                resumeData.aboutme\r\n                            }\r\n                        </p>\r\n                        <div className=\"row\">\r\n                            <div className=\"contact-details\">\r\n                                <h2>Contact Details</h2>\r\n                                <p className=\"address\">\r\n                                    <span>{resumeData.name}</span>\r\n                                    <br></br>\r\n                                    <span>\r\n                                        {resumeData.address}\r\n                                    </span>\r\n                                    <br></br>\r\n                                    <span>{resumeData.website}</span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </section>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nexport default class Resume extends Component {\r\n    render() {\r\n        let resumeData = this.props.resumeData;\r\n        return (\r\n            <section id=\"resume\" className=\"resume\">\r\n                <div className=\"row education\">\r\n                    <div className=\"three columns header-col\">\r\n                        <h1><span>Education</span></h1>\r\n                    </div>\r\n                    <div className=\"nine columns main-col\">\r\n                        {\r\n                            resumeData.education && resumeData.education.map((item) => {\r\n                                return (\r\n                                    <div className=\"row item\">\r\n                                        <div className=\"twelve columns\">\r\n                                            <h3>{item.UniversityName}</h3>\r\n                                            <p className=\"info\">\r\n                                                {item.specialization}\r\n                                                <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\r\n                                            <p>\r\n                                                {item.Achievements}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"row work\">\r\n                    <div className=\"three columns header-col\">\r\n                        <h1><span>Work</span></h1>\r\n                    </div>\r\n                    <div className=\"nine columns main-col\">\r\n                        {\r\n                            resumeData.work && resumeData.work.map((item) => {\r\n                                return (\r\n                                    <div className=\"row item\">\r\n                                        <div className=\"twelve columns\">\r\n                                            <h3>{item.CompanyName}</h3>\r\n                                            <p className=\"info\">\r\n                                                {item.specialization}\r\n                                                <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\r\n                                            <p>\r\n                                                {item.Achievements}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"row skill\">\r\n                    <div className=\"three columns header-col\">\r\n                        <h1><span>Skills</span></h1>\r\n                    </div>\r\n                    <div className=\"nine columns main-col\">\r\n                        <p>\r\n                            {resumeData.skillsDescription}\r\n                        </p>\r\n                        <div className=\"bars\">\r\n                            <ul className=\"skills\">\r\n                                {\r\n                                    resumeData.skills && resumeData.skills.map((item) => {\r\n                                        return (\r\n                                            <li>\r\n                                                <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\r\n                                                </span><em>{item.skillname}</em>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Porfolio extends Component {\r\n    render() {\r\n        let resumeData = this.props.resumeData;\r\n        return (\r\n            <section id=\"portfolio\" className=\"portfolio\">\r\n                <div className=\"row\">\r\n                    <div className=\"twelve columns collapsed\">\r\n                        <h1>Check Out Some of My Works.</h1>\r\n                        <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\" alt=\"\">\r\n                            {\r\n                                resumeData.portfolio && resumeData.portfolio.map((item) => {\r\n                                    return (\r\n                                        <div className=\"columns portfolio-item\">\r\n                                            <div className=\"item-wrap\">\r\n                                                <div>\r\n                                                    <img src={`${item.imgurl}`} className=\"item-img\" />\r\n                                                    <div className=\"overlay\">\r\n                                                        <div className=\"portfolio-item-meta\">\r\n                                                            <h5>{item.name}</h5>\r\n                                                            <p>{item.description}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class ContactMe extends Component {\r\n    render() {\r\n        let resumeData = this.props.resumeData;\r\n        return (\r\n            <section id=\"contact\" className=\"contactMe\">\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <p className=\"lead\">\r\n                            Feel free to contact me for any work or suggestions below\r\n</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <aside>\r\n                        <div>\r\n                               {\r\n                                    resumeData.contacts && resumeData.contacts.map(item => {\r\n                                        return (\r\n                                            <li key={item.name}>\r\n                                                <span>{item.name}: </span>\r\n                                                <a href={item.url} target=\"\">\r\n                                                    <span>{  item.userId }</span>\r\n                                                </a>\r\n                                            </li>\r\n                                        )\r\n                                    }\r\n                                    )\r\n                                }\r\n                        </div>\r\n                    </aside>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nexport default class Footer extends Component {\r\n    render() {\r\n        let resumeData = this.props.resumeData;\r\n        return (\r\n            <footer className=\"footer\">\r\n                <div className=\"row\">\r\n                    <div className=\"twelve columns\">\r\n                        <ul className=\"social-links\">\r\n                            {\r\n                                resumeData.socialLinks && resumeData.socialLinks.map((item) => {\r\n                                    return (\r\n                                        <li>\r\n                                            <a href={item.url}>\r\n                                                <i className={item.className}>\r\n                                                    { item.name }\r\n                                                </i>\r\n                                            </a>\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" />\r\n                    </a></div>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}","let resumeData = {\r\n    \"imagebaseurl\": \"https://lhoussaine-ouarhou.github.io/\",\r\n    \"name\": \"OUARHOU Lhoussaine\",\r\n    \"role\": \"Full Satck Developer\",\r\n    \"contacts\":[\r\n        {\r\n            \"name\":\"linkedin\",\r\n            \"url\":\"https://www.linkedin.com/in/lhoussaine-ouarhou/\",\r\n            \"userId\":\"@lhoussaine ouarhou\"\r\n        },\r\n        {\r\n            \"name\":\"gmail\",\r\n            \"url\":\"l.ouarhou.ensa@gmail.com\",\r\n            \"userId\":\"l.ouarhou.ensa@gmail.com\"\r\n        },\r\n        {\r\n            \"name\":\"github\",\r\n            \"url\":\"http://github.com/lhousaine\",\r\n            \"userId\":\"lhousaine\"\r\n        }\r\n    ],\r\n    \"skypeid\": \"lhoussaine ouarhou\",\r\n    \"roleDescription\": \"I am interested in full-stack development & Microservices Architectures and everything in its orbit.I like to learn and create web applications in various parts of software development and like to learn about new technologies\",\r\n    \"socialLinks\": [\r\n        {\r\n            \"name\": \"linkedin\",\r\n            \"url\": \"https://www.linkedin.com/in/lhoussaine-ouarhou/\",\r\n            \"className\": \"fa fa-linkedin\"\r\n        },\r\n        {\r\n            \"name\": \"github\",\r\n            \"url\": \"http://github.com/lhousaine\",\r\n            \"className\": \"fa fa-github\"\r\n        }\r\n    ],\r\n    \"aboutme\": \"I am an engineer in computer science, graduated from the National School of Applied Sciences of Marrakech. I am a self taught Full Stack Web Developer. I believe that to be successful in life, one needs to be obsessive with their dreams and keep working towards them.\",\r\n    \"address\": \"DR AIT ALLA TAZARINE ZAGORA, MAROC\",\r\n    \"website\": \"https://lhousaine.github.io\",\r\n    \"education\": [\r\n        {\r\n            \"UniversityName\": \"National School of Applied Sciences of Marrakech\",\r\n            \"specialization\": \"Computer Science\",\r\n            \"MonthOfPassing\": \"June\",\r\n            \"YearOfPassing\": \"2020\",\r\n            \"Achievements\": \"Some Achievements\"\r\n        },\r\n    ],\r\n    \"work\": [\r\n        {\r\n            \"CompanyName\": \"SQLI ISC MAROC\",\r\n            \"specialization\": \"Developer Java/JEE/Microservices- Intern\",\r\n            \"MonthOfLeaving\": \"August\",\r\n            \"YearOfLeaving\": \"2020\",\r\n            \"Achievements\": \"Some Achievements\"\r\n        },\r\n        {\r\n            \"CompanyName\": \"Mohammed VI Polytechnic University Ben Guerir\",\r\n            \"specialization\": \"Web Developer-Intern\",\r\n            \"MonthOfLeaving\": \"August\",\r\n            \"YearOfLeaving\": \"2019\",\r\n            \"Achievements\": \"Some Achievements\"\r\n        }\r\n    ],\r\n    \"skillsDescription\": \"Your skills here\",\r\n    \"skills\": [\r\n        {\r\n            \"skillname\": \"Java\"\r\n        },\r\n        {\r\n            \"skillname\": \"JEE (JPA, JSP, Struts,JSF)\"\r\n        },\r\n        {\r\n            \"skillname\": \"Spring and it's Modules(Boot,Data, MVC, Security, Batch,WebFlux, AOP)\"\r\n        },\r\n        {\r\n            \"skillname\": \"Javascript\"\r\n        },\r\n        {\r\n            \"skillname\": \"Angular\"\r\n        },\r\n        {\r\n            \"skillname\": \"Reactjs\"\r\n        },\r\n        {\r\n            \"skillname\": \"Redux\"\r\n        },\r\n        {\r\n            \"skillname\": \"HTML5\"\r\n        },\r\n        {\r\n            \"skillname\": \"CSS (Bootstrap)\"\r\n        },\r\n        {\r\n            \"skillname\": \"Docker\"\r\n        },\r\n        {\r\n            \"skillname\": \"Kubernetes\"\r\n        },\r\n        {\r\n            \"skillname\": \"Cloud Plateforms (Azure, IBM, GCP)\"\r\n        },\r\n        {\r\n            \"skillname\": \"Service mesh\"\r\n        }\r\n    ],\r\n    \"portfolio\": [\r\n        {\r\n            \"name\": \"um6p Intern\",\r\n            \"description\": \"the Home page of SIMLAB Site Web Application \",\r\n            \"imgurl\": \"imgs/AccueilSiteWebSimlab.png\"\r\n        },\r\n        {\r\n            \"name\": \"Trending Repositories web Application\",\r\n            \"description\": \"A web application developped in Microservices Architecture, It's an application for statics of trending repositories In Github\",\r\n            \"imgurl\": \"imgs/trendingRepositoriesApp.png\"\r\n        },\r\n        {\r\n            \"name\": \"Gym Desktop App\",\r\n            \"description\": \"Design And development of a Desktop Application for Gym Management \",\r\n            \"imgurl\": \"imgs/gymDesktopApp.PNG\"\r\n        },\r\n        {\r\n            \"name\": \"Bank Web App\",\r\n            \"description\": \"Design And development of a Web Application for managing on bank\",\r\n            \"imgurl\": \"imgs/bankApp.png\"\r\n        }\r\n    ]\r\n}\r\nexport default resumeData","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Presentation from './components/Presentation';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport ContactMe from './components/ContactMe';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData} />\n        <Presentation resumeData={resumeData} />\n        <About resumeData={resumeData} />\n        <Resume resumeData={resumeData} />\n        <Portfolio resumeData={resumeData} />\n        <ContactMe resumeData={resumeData} />\n        <Footer resumeData={resumeData} />\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}